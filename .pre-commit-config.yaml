<<<<<<< HEAD
default_stages:
  - pre-commit # Run locally
  - manual # Run in CI
=======
default_install_hook_types:
  - pre-commit
  - commit-msg
default_stages:
  - pre-commit # Run locally
  - manual # Run in CI
exclude: 'vllm/third_party/.*'
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
repos:
- repo: https://github.com/google/yapf
  rev: v0.43.0
  hooks:
  - id: yapf
    args: [--in-place, --verbose]
<<<<<<< HEAD
    additional_dependencies: [toml] # TODO: Remove when yapf is upgraded
    exclude: 'vllm/third_party/.*'
- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.9.3
  hooks:
  - id: ruff
    args: [--output-format, github, --fix]
    exclude: 'vllm/third_party/.*'
- repo: https://github.com/codespell-project/codespell
  rev: v2.4.0
=======
- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.11.7
  hooks:
  - id: ruff
    args: [--output-format, github, --fix]
  - id: ruff-format
    files: ^(.buildkite|benchmarks)/.*
- repo: https://github.com/codespell-project/codespell
  rev: v2.4.1
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  hooks:
  - id: codespell
    additional_dependencies: ['tomli']
    args: ['--toml', 'pyproject.toml']
- repo: https://github.com/PyCQA/isort
<<<<<<< HEAD
  rev: 0a0b7a830386ba6a31c2ec8316849ae4d1b8240d # 6.0.0
  hooks:
  - id: isort
    exclude: 'vllm/third_party/.*'
- repo: https://github.com/pre-commit/mirrors-clang-format
  rev: v19.1.7
=======
  rev: 6.0.1
  hooks:
  - id: isort
- repo: https://github.com/pre-commit/mirrors-clang-format
  rev: v20.1.3
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  hooks:
  - id: clang-format
    exclude: 'csrc/(moe/topk_softmax_kernels.cu|quantization/gguf/(ggml-common.h|dequantize.cuh|vecdotq.cuh|mmq.cuh|mmvq.cuh))|vllm/third_party/.*'
    types_or: [c++, cuda]
    args: [--style=file, --verbose]
- repo: https://github.com/jackdewinter/pymarkdown
<<<<<<< HEAD
  rev: v0.9.27
  hooks:
  - id: pymarkdown
    args: [fix]
    exclude: 'vllm/third_party/.*'
=======
  rev: v0.9.29
  hooks:
  - id: pymarkdown
    args: [fix]
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
- repo: https://github.com/rhysd/actionlint
  rev: v1.7.7
  hooks:
  - id: actionlint
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
- repo: https://github.com/astral-sh/uv-pre-commit
  rev: 0.6.2
  hooks:
    - id: pip-compile
      args: [requirements-test.in, -o, requirements-test.txt]
      files: ^requirements-test\.(in|txt)$
=======
- repo: https://github.com/astral-sh/uv-pre-commit
  rev: 0.6.17
  hooks:
    - id: pip-compile
      args: [requirements/test.in, -o, requirements/test.txt, --index-strategy, unsafe-best-match, --torch-backend, cu128]
      files: ^requirements/test\.(in|txt)$
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
- repo: local
  hooks:
  - id: mypy-local
    name: Run mypy for local Python installation
    entry: tools/mypy.sh 0 "local"
    language: python
    types: [python]
<<<<<<< HEAD
    additional_dependencies: &mypy_deps [mypy==1.11.1, types-setuptools, types-PyYAML, types-requests]
    stages: [pre-commit] # Don't run in CI
    exclude: 'vllm/third_party/.*'
=======
    additional_dependencies: &mypy_deps [mypy==1.11.1, types-cachetools, types-setuptools, types-PyYAML, types-requests]
    stages: [pre-commit] # Don't run in CI
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  - id: mypy-3.9 # TODO: Use https://github.com/pre-commit/mirrors-mypy when mypy setup is less awkward
    name: Run mypy for Python 3.9
    entry: tools/mypy.sh 1 "3.9"
    language: python
    types: [python]
    additional_dependencies: *mypy_deps
    stages: [manual] # Only run in CI
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  - id: mypy-3.10 # TODO: Use https://github.com/pre-commit/mirrors-mypy when mypy setup is less awkward
    name: Run mypy for Python 3.10
    entry: tools/mypy.sh 1 "3.10"
    language: python
    types: [python]
    additional_dependencies: *mypy_deps
    stages: [manual] # Only run in CI
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  - id: mypy-3.11 # TODO: Use https://github.com/pre-commit/mirrors-mypy when mypy setup is less awkward
    name: Run mypy for Python 3.11
    entry: tools/mypy.sh 1 "3.11"
    language: python
    types: [python]
    additional_dependencies: *mypy_deps
    stages: [manual] # Only run in CI
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  - id: mypy-3.12 # TODO: Use https://github.com/pre-commit/mirrors-mypy when mypy setup is less awkward
    name: Run mypy for Python 3.12
    entry: tools/mypy.sh 1 "3.12"
    language: python
    types: [python]
    additional_dependencies: *mypy_deps
    stages: [manual] # Only run in CI
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  - id: shellcheck
    name: Lint shell scripts
    entry: tools/shellcheck.sh
    language: script
    types: [shell]
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  - id: png-lint
    name: Lint PNG exports from excalidraw
    entry: tools/png-lint.sh
    language: script
    types: [png]
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  - id: signoff-commit
    name: Sign-off Commit
    entry: bash
    args:
      - -c
      - |
<<<<<<< HEAD
        if ! grep -q "^Signed-off-by: $(git config user.name) <$(git config user.email)>" .git/COMMIT_EDITMSG; then
          printf "\nSigned-off-by: $(git config user.name) <$(git config user.email)>\n" >> .git/COMMIT_EDITMSG
=======
        if ! grep -q "^Signed-off-by: $(git config user.name) <$(git config user.email)>" "$(git rev-parse --git-path COMMIT_EDITMSG)"; then
          printf "\nSigned-off-by: $(git config user.name) <$(git config user.email)>\n" >> "$(git rev-parse --git-path COMMIT_EDITMSG)"
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
        fi
    language: system
    verbose: true
    stages: [commit-msg]
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  - id: check-spdx-header
    name: Check SPDX headers
    entry: python tools/check_spdx_header.py
    language: python
    types: [python]
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  - id: check-filenames
    name: Check for spaces in all filenames
    entry: bash
    args:
      - -c
      - 'git ls-files | grep " " && echo "Filenames should not contain spaces!" && exit 1 || exit 0'
    language: system
    always_run: true
    pass_filenames: false
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
  - id: update-dockerfile-graph
    name: Update Dockerfile dependency graph
    entry: tools/update-dockerfile-graph.sh
    language: script
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  # Keep `suggestion` last
  - id: suggestion
    name: Suggestion
    entry: bash -c 'echo "To bypass pre-commit hooks, add --no-verify to git commit."'
    language: system
    verbose: true
    pass_filenames: false
<<<<<<< HEAD
    exclude: 'vllm/third_party/.*'
=======
>>>>>>> eca18691d2fe29c4f6c1b466709eda9f123116ea
  # Insert new entries above the `suggestion` entry
